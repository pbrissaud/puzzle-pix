// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  name          String
  picture       String
  signupDate    DateTime  @default(now())
  lastLoginDate DateTime  @default(now())
  rooms         Room[]
  sessions      Session[]
}

model Session {
  id        String   @id @map("_id")
  userId    String   @db.ObjectId
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime
}

enum PlayerRole {
  PLAYER
  ADMIN
}

model Player {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  socketId String     @unique
  name     String
  roomId   String     @db.ObjectId
  room     Room       @relation(fields: [roomId], references: [id], onDelete: Cascade)
  role     PlayerRole
  score    Int        @default(0)

  @@unique([roomId, name])
}

model Room {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  public       Boolean
  authorId     String   @db.ObjectId
  author       User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  imgUrl       String
  nbPieces     Int
  players      Player[]
  creationDate DateTime @default(now())
  pieces       Piece[]
}

model Piece {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  roomId    String  @db.ObjectId
  room      Room    @relation(fields: [roomId], references: [id], onDelete: Cascade)
  imgBuffer String
  order     String
  posX      Int
  posY      Int
  movable   Boolean @default(true)
}
